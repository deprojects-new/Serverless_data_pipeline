name: Trigger + Transformation

on:
  push:
    branches: [main]
    paths:
      - 'src/lambda_code/**'
      - 'src/glue_scripts/**'
      - 'src/tests/**'  # added this to include any test files
  pull_request:
    branches: [main]
    paths:
      - 'src/lambda_code/**'
      - 'src/glue_scripts/**'
      - 'src/tests/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  PYTHON_VERSION: '3.9'

jobs:
  run-tests:
    name: Code Quality & Unit Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install black isort pytest pytest-cov boto3 moto

      - name: Check Code Formatting
        run: |
          pip install black isort
          echo "Checking code formatting"
          #check lambda_code
          black src/lambda_code/ --line-length=88 --check
          isort src/lambda_code/ --profile=black --check
          #check glue
          black
          black src/glue_scripts/ --line-length=88 --check
          isort src/glue_scripts/ --profile=black --check
          #check test
          black src/tests/ --line-length=88 --check
          isort src/tests/ --profile=black --check


      - name: Run Unit Tests
        run: |
          if [ -d "src/tests/unit" ]; then
            echo "Running unit tests"
            pytest src/tests/unit/ -v --cov=src/lambda_code --cov-report=term-missing
          else
            echo "No unit tests found."
          fi

      - name: Run Integration Tests
        run: |
          if [ -d "src/tests/integration" ]; then
            echo "Running integration tests"
            pytest src/tests/integration/ -v
          else
            echo "No integration tests found."
          fi

  deploy-lambda:
    name: Deploy Lambda to AWS
    needs: run-tests
    if: >
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push' &&
      (contains(github.event.head_commit.modified, 'src/lambda_code/'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY2 }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Package Lambda Code
        run: |
          cd src
          zip -r lambda_function.zip lambda_code/

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name assignment5-data-pipeline-lambda \
            --zip-file fileb://src/lambda_function.zip \
            --region ${{ env.AWS_REGION }}

  deploy-etl:
    name: Deploy ETL Script to S3
    needs: run-tests
    if: >
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push' &&
      (contains(github.event.head_commit.modified, 'src/glue_scripts/'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY2 }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload ETL script to S3
        run: |
          aws s3 cp src/glue_scripts/etl_script.py s3://assignment5-data-lake/glue_scripts/
