name: Lambda Code Quality & Testing Pipeline - Serverless Data Pipeline

on:
  push:
    branches: [main]
    paths: ['src/**', 'tests/**']
  pull_request:
    branches: [main]
    paths: ['src/**', 'tests/**']
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  PYTHON_VERSION: '3.9'
  PROJECT_NAME: serverless-data-pipeline

jobs:
  test-lambda-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install pytest pytest-cov moto boto3 pytest-mock
      
      - name: Lint Lambda Code
        run: |
          pip install flake8
          flake8 src/lambda_code/ --max-line-length=88 --ignore=E203,W503
          flake8 src/glue_scripts/ --max-line-length=88 --ignore=E203,W503      

      - name: Run Unit Tests
        run: |
          if [ -d "src/tests/unit" ]; then
            echo "Running unit tests for Lambda functions"
            python -m pytest src/tests/unit/ -v --cov=src/lambda_code --cov-report=term-missing
          else
            echo "No unit tests found, skipping"
          fi
      
      - name: Run Integration Tests
        run: |
          if [ -d "src/tests/integration" ]; then
            echo "Running integration tests"
            python -m pytest src/tests/integration/ -v
          else
            echo "No integration tests found, skipping"
          fi

  package-lambda:
    needs: test-lambda-code
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
      
      - name: Package Lambda Code
        run: |
          echo "Packaging Lambda function code"
          cd src
          zip -r lambda_function.zip lambda_code/
          echo "Lambda code packaged successfully"
      
      - name: Upload Lambda Package
        uses: actions/upload-artifact@v3
        with:
          name: lambda-package
          path: src/lambda_function.zip
      
      - name: Success Message
        run: |
          echo "Code Quality & Testing Pipeline Completed Successfully!"
          echo "Lambda package created and uploaded as artifact"
          echo "Ready for Lambda and ETL deployment when you're ready"
          echo "To deploy: Uncomment lambda-deploy and etl-deploy jobs and push"

  lambda-deploy:
    needs: package-lambda
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY2 }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Download Lambda Package
        uses: actions/download-artifact@v3
        with:
          name: lambda-package
          path: ./
      
      - name: Update Lambda Function
        run: |
          echo "Updating Lambda function code"
          aws lambda update-function-code \
            --function-name assignment5-data-pipeline-lambda \
            --zip-file fileb://lambda_function.zip \
            --region ${{ secrets.AWS_REGION }}
          echo "Lambda function updated successfully"
      
      - name: Verify Lambda Deployment
        run: |
          echo "Verifying Lambda function deployment"
          aws lambda get-function --function-name assignment5-data-pipeline-lambda --region ${{ secrets.AWS_REGION }}
          echo "Lambda function deployment verified successfully"

  etl-deploy:
    needs: test-lambda-code
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY2 }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Upload ETL Scripts to S3
        run: |
          echo "Uploading ETL scripts to S3"
          aws s3 cp src/glue_scripts/etl_script.py s3://assignment5-raw-bucket/glue_scripts/etl_script.py
          echo "ETL scripts uploaded successfully"
      
      - name: Verify ETL Script Upload
        run: |
          echo "Verifying ETL script upload"
          aws s3 ls s3://assignment5-raw-bucket/glue_scripts/etl_script.py
          echo "ETL script upload verified successfully"

  verify-deployment:
    needs: [lambda-deploy, etl-deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_KEY2 }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Final Deployment Verification
        run: |
          echo "Performing final deployment verification"
          
          # Verify Lambda function
          echo "Verifying Lambda function..."
          aws lambda get-function --function-name assignment5-data-pipeline-lambda --region ${{ secrets.AWS_REGION }}
          
          # Verify ETL script
          echo "Verifying ETL script..."
          aws s3 ls s3://assignment5-raw-bucket/glue_scripts/etl_script.py
          
          echo "âœ… All deployments verified successfully!"
          echo "ðŸš€ Lambda function and ETL scripts are ready for use"
